GUIA DE ESTUDOS - TEORIA DE CONSTRUÇÃO DE APIs SOA
==================================================

1. SOA (SERVICE-ORIENTED ARCHITECTURE)
-------------------------------------

Conceitos Principais:
- Definição de SOA e características básicas
- Serviços independentes e interoperáveis
- Benefícios para sistemas distribuídos

Exercícios Práticos:
1. Compare SOA com arquitetura monolítica (5 diferenças principais)

2. Para uma loja online, organize os principais serviços em uma arquitetura SOA

3. Desenhe um diagrama simples de SOA para sistema bancário


2. PRINCÍPIOS DE DESIGN SOA
--------------------------

Conceitos Principais:
- Baixo acoplamento entre serviços
- Abstração e encapsulamento
- Reusabilidade e autonomia

Exercícios Práticos:
1. Analise uma API pública popular e identifique princípios SOA aplicados

2. Refatore um código fortemente acoplado para seguir princípios SOA

3. Crie um contrato básico para serviço de pedidos


3. ARQUITETURAS EM NUVEM
-----------------------

Conceitos Principais:
- IaaS: infraestrutura virtualizada
- PaaS: plataforma de desenvolvimento
- SaaS: software pronto para uso

Exercícios Práticos:
1. Crie tabela comparativa entre IaaS, PaaS e SaaS

2. Recomende solução em nuvem para sistema legado de RH

3. Compare preços e recursos básicos entre AWS, Azure e GCP


4. COMPUTAÇÃO EM NUVEM
---------------------

Conceitos Principais:
- Modelos: público, privado e híbrido
- Vantagens e riscos da migração
- Segurança e compliance

Exercícios Práticos:
1. Esboce plano de migração para empresa de médio porte

2. Compare custos: infraestrutura local versus nuvem

3. Liste riscos de segurança na nuvem e medidas de proteção


5. PADRÃO MVC (MODEL-VIEW-CONTROLLER)
-----------------------------------

Conceitos Principais:
- Separação de responsabilidades
- Fluxo de comunicação entre camadas
- Problemas comuns na implementação

Exercícios Práticos:
1. Crie CRUD simples seguindo MVC (lista de tarefas)

2. Identifique erros em código MVC mal implementado

3. Diagrame o fluxo de dados para operação de login


6. CAMADA MODEL
--------------

Conceitos Principais:
- Regras de negócio e validações
- Manipulação de dados
- Integridade de dados

Exercícios Práticos:
1. Implemente Model para empréstimo de livros

2. Identifique e corrija falhas de segurança em Model

3. Refatore Model com responsabilidades misturadas


7. CAMADA CONTROLLER
------------------

Conceitos Principais:
- Coordenação entre Model e View
- Processamento de requisições
- Tratamento de erros

Exercícios Práticos:
1. Implemente Controller para CRUD de produtos

2. Analise logs de erro e sugira soluções

3. Escreva testes unitários para um Controller


8. CAMADA VIEW
------------

Conceitos Principais:
- Interface com usuário
- Apresentação de dados
- Atualização quando Model muda

Exercícios Práticos:
1. Crie interface simples que atualiza com mudanças no Model

2. Adapte uma View para diferentes dispositivos

3. Implemente padrão Observer para notificação de View


DICAS DE ESTUDO
-------------
1. Crie mapas mentais dos conceitos
2. Implemente mini-projetos práticos
3. Estude casos reais
4. Explique os conceitos a outras pessoas
5. Refaça os exercícios regularmente